rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Regla general para permitir lectura
    match /{document=**} {
      allow read: if true;
    }
    
    // Regla para los temas
    match /themes/{themeId} {
      allow update: if true;
    }
    
    // Regla para los músicos
    match /musicians/{musicianId} {
      allow update: if true;
    }
    
    // Regla para los capítulos
    match /chapters/{chapterId} {
      allow update: if true;
    }
    
    // Regla para el ensamble
    match /assembly/{assemblyId} {
      allow update: if true;
    }
    
    // Regla para los espectadores
    match /spectators/{idSpectator} {
      // Solo usuarios autenticados pueden leer datos de spectators
      allow read: if true;
      // Para crear/actualizar/eliminar se verifica que además la data contenga alguna de las llaves permitidas
      // Permitir crear o actualizar solo `passwordChanged` sin estar autenticado
      allow create, update: if request.resource.data.keys().hasOnly(['passwordChanged']);

      // Permitir crear, actualizar o eliminar cualquier otro campo si está autenticado
      allow create, update, delete: if request.auth != null &&
        request.resource.data.keys().hasAny([
          'payments',
          'isChecked',
          'numberOfPeople',
          'email',
          'phone',
          'onlyOwnerPayment',
          'name',
          'lastName',
          'isCheckinActive',
          'uniquePaymentForGroup',
          'subscribedEventsId'
        ]);
    }
    
    // Regla para los eventos - NUEVA
    match /events/{eventId} {
      // Los usuarios autenticados pueden actualizar eventos (para añadir espectadores)
      allow update: if request.auth != null;
    }
    
    // Regla para las evaluaciones
    match /evaluations/{evaluationId} {
      // Permitir crear, actualizar o eliminar evaluaciones sin autenticación
      allow create, update, delete: if true;
    }
  }
}